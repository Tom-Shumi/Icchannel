version: '3'

services:
    redis:
        image: "redis:latest"
        ports:
            - "6379:6379"
        volumes:
            - "./data/redis:/data/redis"

    # elasticsearch:
    #     image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    #     environment:
    #         - discovery.type=single-node
    #         - cluster.name=docker-cluster
    #         - bootstrap.memory_lock=true
    #         - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    #     ports:
    #         - 9200:9200
    #     volumes:
    #         - ./es-data:/usr/share/elasticsearch/data

    icchannel_api:
        image: zenika/kotlin:latest
        ports:
            - "8080:8080"
        working_dir: /app
        volumes:
            - "./IcchannelBackend/build/libs:/app"
        environment:
            SPRING_PROFILES_ACTIVE: production
            FRONT_ORIGIN: $FRONT_ORIGIN
            ELASTICSEARCH_SERVER: $ELASTICSEARCH_SERVER
            TZ: Asia/Tokyo
        command: ["java", "-jar", "IcchannelBackend-0.0.1-SNAPSHOT.war"]

    icchannel_front:
        image: node:14.15.5
        ports:
            - "3000:3000"
        working_dir: /app
        volumes:
            - "./icchannel_frontend:/app"
        environment:
            NEXT_PUBLIC_API_SERVER: $NEXT_PUBLIC_API_SERVER
        command: [sh, -c, yarn start]

    nginx:
        image: "nginx:latest"
        ports:
            - 80:80
            - 443:443
            - 18080:18080
        volumes:
            - ./icchannel_frontend/out:/var/www/html
            - ./nginx:/etc/nginx/conf.d
            - ./letsencrypt:/etc/letsencrypt
        depends_on:
            - icchannel_front

    certbot:
        image: certbot/certbot:v1.7.0
        volumes:
            - ./letsencrypt:/etc/letsencrypt
            - ./icchannel_frontend/out:/var/www/html
        command: ["--version"]

